Program Created By: Luis Berdecia 
-------------------------------------------------------------------------------------------------------------------------------------------------
Date: June 25 2020*******

-Created the Name Class
-Created the Address Class
-Created the States Class
-Created the Person Class 

-Added an Abstract Method to the Person Class
-Implemented all getter and setters needed for all these classes and also a toString and equals method

-isSmoke will the the abstract method in the Person Class

-Created the GUI class to test the classes
-Created the Launch class to be able to launch the program.


-------------------------------------------------------------------------------------------------------------------------------------------------
Date: June 26 2020****************

-Added Comments to all the classes created yesterday and explained how each class and their methods work.

-Added the getStatesCodes method to the States Class so I can use it to add all of those state codes into a Combo Box

-Added a Social Security Field to the Person Class to make each Person Object UNIQUE!!!!

-Created the Student Class 
-Created the Teacher Class
-Created the Janitor Class

-These 3 classes will extend to the Person Class

-Added SSN to the Person Class

*******Note*******
Not sure how to set the toString method for the States Class :(

-------------------------------------------------------------------------------------------------------------------------------------------------
Date: June 27 2020****************

-Added Comment to the Student, Teacher, and Jantitor Class

-Created the AlertBox Class
-Created the CloseProgram Class

-Updated the GUI class 

-------------------------------------------------------------------------------------------------------------------------------------------------
Date: July 3 2020******************

-Changed the Name of GUI class to Login_Menu;

-The Login_Menu class will allow the user to either Log In or to Sign Up for an account

-Created the Database class that will be in charge of handling and connecting to MySQL

*******Note*******
What could be done for the animation part of the program?

-------------------------------------------------------------------------------------------------------------------------------------------------
Date: July 4 2020******************


-Created the New_Account Class which will be in charge of creating a new user for the program

-Added Text Label and Text Field for the following:

- First Name
- Middle Initial
- Last Name
- Social Security Number
- Address
- City
- Zip Code

-Added a Date Picker for the DOB option
-Added a Choice Box option for the State Field and the Gender Field

-------------------------------------------------------------------------------------------------------------------------------------------------
Date: July 8 2020********************

-Added the Error Manager Class to handle all errors for the program

-Added Errors Notifications for all fields in each of the following classes:

- Person Class
- Name Class
- Address Class

-Created UserList Class to handle the Users for the Program

-------------------------------------------------------------------------------------------------------------------------------------------------
Date: July 10 2020*******************

-Remove the SSN Field from the New_Account Class and added a Smoker Info Field
-Removed the SSN from the Person Class (Realized it was not Needed)
-Changed the abstract method of isSmoke to smokerInfo and changed it into a String instead of a boolean
-Changed the abstract method to be setOccupation insteas of smokerInfo
-Added Error Maanager Notification to the States Class in the setStateDescription Method

-Created the Main_Menu Class to handle the table for the database

*******Note*******

I decided NOT to use the Log_In Class in this program

Also in the future if anyone needs a setSSN method here it is:

/**
	 * @param SSN is the SSN(Social Security Number) to set
	 * If the SSN is empty the method will send an Error message 
	 * Else if SSN is not empty it will check if the length is = 9 and
	 * it will also make sure it follows the correct pattern:
	 * 
	 * ^ - Start of string
	 *(?!000|666) -fail the match if the string starts with 000 or 666
     *[0-8] - Then match and consume the next digit if it is in range 0 to 8
	 *[0-9]{2} - Then match and consume the next any two digits where [0-9] means any digit which you can also compactly write as /d
	 *(?!00) - rejects the match if the next two digits are 00
	 *[0-9]{2} - Then next it matches and consumes any two digits
	 *(?!0000) - rejects the match if the next four digits are 0000
	 *[0-9]{4} - Then next it matches and consumes any four digits
	 * $ - End of string
	 * 
	 */
	
	public void setSSN(String SSN){
				
		if(!(SSN.isEmpty())){
		
			if(SSN.length() == 9 && Pattern.matches("^(?!000|666)[0-8][0-9]{2}(?!00)[0-9]{2}(?!0000)[0-9]{4}$", SSN)){
				
				this.SSN = SSN.substring(0, 3)+"-"+SSN.substring(3, 5)+"-"+SSN.substring(5,9);
				
			}//if
			
			else{
				
				ErrorManager.addErrorMessage("- Incorrect Format for Social Security Number");
				
			}//else
			
		}//if
		
		else{
			
			 ErrorManager.addErrorMessage("- No Social Security Found!");
			
		}//else
			
	}//setSSN

-------------------------------------------------------------------------------------------------------------------------------------------------
Date: July 14 2020*************

-Added a TableView to the Main_Menu Class
-Added a Add Button, Delete Button, Edit Button, Search Button, viewButton reportButton, chartButton, refreshButton the the Main_Menu Class
-Added a Search Bar using TextField and implemented a search feature to the TableView using FilteredList<Person>

-Added the Following methods to handle the Buttons in the Main_Menu Class:

-refreshButtonClicked()
-viewButtonClicked()
-searchButtonClicked()
-addButtonClicked()
-editButtonClicked()
-deleteButtonClicked()

-Added Comments to the Main_Menu Class

-------------------------------------------------------------------------------------------------------------------------------------------------
Date: July 16 2020**************

-Created some PNG Images in Photoshop to add to the addUserButton, deleteUserButton, refreshButton, and the chartButton (Looks Pretty Cool)
-Added Two ChoiceBox one to Filter the TableView by Type of Occupation(Student,Janitor,Teacher)
-The other one is  for the Search Bar to filter by Name,Gender,and Address

-Added a setOnKeyPressed to the searchBar TextField to give the option to the user to click "ENTER" on the Keyboard in order to use it
-Created the Edit_Info Class to handle the GUI and be able to edit the information of the selected user in the Main_Menu Class
-Created the View_Info Class to handle the GUI that will display the Info of the Selected user in the Main_Menu Class

-------------------------------------------------------------------------------------------------------------------------------------------------
Date: July 17 2020**************

-Added View Button and Reports Button to the Main_Menu Class
-Added a Listener to the filterByType ChoiceBox in Main_Menu Class

-Main_Menu class can now succesfully do the following:

-Delete a User 
-Add a User 
-Filter a User by Occupation
-Search User by Name, Gender, Address
-Generate a Report for (All Users, Students, Teacher, Janitor)
-Create a Chart to display Statistics (Occupation,Gender,Smoker Info)
-Succesfully View a selected Users Information and can generate a report of that person only

-Created a Statistics Class to handle the Statistics of (Gender,Occuaption,and Smoker Info)
-Created Reports Class to be able to generate reports and send them to a .txt file
-Created s Charts Class that can create a PieChart on the Statistics
-Created a Subjects and Majors Class to keep the info of the type of subjects and majors offered


-------------------------------------------------------------------------------------------------------------------------------------------------
Date: July 24 2020*******************


-Created a Server Class to handle the connection to the client(Main_Menu Class)
-It will keepp track of how many times an update has been made

-Created a Database Class to getUsers from Databse and to be able to add and remove users from the Database
-I was succesfully able to do all of it but I commented out all the atabase parts in the project 

-I had the following in MySQL:


create Database FinalProject;

use FinalProject;

create Table Person(userid int, fName varchar(30), midInitial varchar(3), lName varchar(30), DateOfBirth varchar(10), 
					streetNumber varchar(10), streetName varchar(20), streetType varchar(20), city varchar(20), 
                    state Enum("AL","AK","AS","AZ","AR","CA","CO","CT","DE","DC","FL","GA", "HI","IL","IN","IA","KS","KY",
							   "LA","ME","MD","MA", "MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH",
                               "OK","OR","PW","PA","PR","RI","SC","SD","TN","TX","UT","VT","VI","VA","WA","WV","WI","WY"), 
					zipCode varchar(5), gender ENUM('F','M','U','O'), smoker Enum('Yes','No'), Occupation ENUM('Student','Teacher','Janitor'), PRIMARY KEY(userid));

create table Student (studentid int ,Foreign Key(studentid) references Person(userid),
									 major Enum("General Studies","Computer Science","Communications","Political Science",
												"Business","Economics","English Literature","Nursing","Chemical Engineering",
												"Psychology","Biology","Criminology","Accounting"), 
                                                gpa double check(gpa >= 0.0 and gpa <= 5.0 ), credits int check(credits >=0 and credits <=130));

create table Teacher (teacherid int ,Foreign Key(teacherid) references Person(userid), 
									subjectTaught Enum("English","Algebra","Geometry","Calculus","Physics","Chemistry","Java Programming","U.S History",
														"International Politics","Intro To Criminology","Intro To Biology","Humanities","Statistics",
														"Drama","Spanish","French","Japanese","U.S Governement","Intro to Psychology","Web Design","Physical Fitness","Digital Media"),
														numOfClasses int, officeNumber varchar(10));
                
create table Janitor (janitorid int,Foreign Key(janitorid) references Person(userid),hourlyRate double check(hourlyRate >= 10.00 and hourlyRate <= 25.00 ), yearsOfService int);



-------------------------------------------------------------------------------------------------------------------------------------------------
